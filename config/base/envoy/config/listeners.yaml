version_info: '0'
resources:
  - '@type': type.googleapis.com/envoy.api.v2.Listener
    name: listener_http
    address:
      socket_address: { address: 0.0.0.0, port_value: 9090 }
    filter_chains:
      - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              '@type': type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
              codec_type: AUTO
              stat_prefix: ingress_http
              rds:
                route_config_name: route_config_0
                config_source: { path: '/etc/envoy/routes.yaml' }
              http_filters:
                - name: envoy.filters.http.grpc_web
                - name: envoy.filters.http.cors
                - name: envoy.filters.http.router
                # - name: envoy.filters.http.ratelimit
                #   # config: {}
                # - name: envoy.filters.http.jwt_authn
                #   # config: {}
  - '@type': type.googleapis.com/envoy.api.v2.Listener
    name: listener_https
    address:
      socket_address: { address: 0.0.0.0, port_value: 9443 }
    filter_chains:
      - transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            '@type': type.googleapis.com/envoy.api.v2.auth.DownstreamTlsContext
            # require_client_certificate: true # uncomment if you want client to provide cert
            common_tls_context:
              alpn_protocols: ['h2', 'http/1.1']
              tls_certificates:
                - certificate_chain: { filename: '/etc/certs/server-cert.pem' }
                  private_key: { filename: '/etc/certs/server-key.pem' }
              validation_context:
                trusted_ca: { filename: '/etc/certs/ca-cert.pem' }
        filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              '@type': type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
              codec_type: AUTO
              stat_prefix: ingress_http
              rds:
                route_config_name: route_config_0
                config_source: { path: '/etc/envoy/routes.yaml' }
              http_filters:
                - name: envoy.filters.http.grpc_web
                - name: envoy.filters.http.cors
                - name: envoy.filters.http.router
                # - name: envoy.filters.http.ratelimit
                #   # config: {}
                # - name: envoy.filters.http.jwt_authn
                #   # config: {}
